%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% This MATLAB Code is developed by Hamidreza Abdolvand to 
%%% PostProcess 3DXRD data. It reads FITALLB data in the format 
%%% given below and generates a 3D grain strcuture based on 
%%% Voronoi or Weighted Voronoi approach
%%% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
% This is to generate grain neigbours
% This program calls a fortran file to generate grain euler angles as well
% as required files for creating input file to ABAQUS FE slover.

%% Order of the data for the input file

%%**** 1: #  grainno; 2: mean_IA; 3: grainvolume;
%%**** 4:x;5: y; 6: z; 7:rodx; 8: rody; 9:rodz; 10: U11; 11:U12; 12: U13;
%%**** 13:U21; 14: U22; 15: U23; 16: U31; 17: U32; 18: U33; 19: eps11;
%%**** 20: eps22;  21: eps33; 22: ;eps23; 23: eps13; 24: eps12; 25: eps11_s;26: eps22_s
%%**** 27:eps33_s; 28: eps23_s ; 29:  eps13_s; 30: eps12_s; 
%%**** 31: sig11; 32: sig22; 33: sig33; 34: sig23; 35: sig13; 36: sig12; 37:sig11_s;
%%**** 38: sig22_s; 39: sig33_s; 40: sig23_s; 41:sig13_s; 42: sig12_s; 43: parent
 %%%% (x, y, z locations muct be in mm)  
%% Program parametes
clear;
nstpsz=5; % mesh size resolution: This identifies the step size used to mesh the volume. Higher value results in better resolution but slower run.
% note that the difference between two upper baound and lower bound should
% be a natural multiple of nstpsz, i.e.:: mod (xfin-x0,nstpsz)=0 same for y
% and z
%%%% this is the size of the volume that you want to study.
x0=-100;   % smallest value in the x-direction (it can be used to cut grains at the edges)
y0=-100;   % smallest value in the y-direction 
z0=-100;   % smallest value in the z-direction 
xfin=100;  % biggest value in the x-direction 
yfin=100;  % biggest value in the y-direction 
zfin=100;  % biggest value in the z-direction 
ngus=10000; %estimated number of grains that fall into this volume--- (use an upper bound number) 
WVORN=0;    % a parameter for using voronoi or weighted voronoi: 0 for Voronoi; 1 for weighted Voronoi.   
NameOfFile='esrf5n.dat';  % this is the name of the file that has COM, Volume, Rodrigues, etc data. 
                          % The order of the data here should be the same
                          % as the one given above.
%%

%%
input_mat=[nstpsz;x0; y0;z0;xfin;yfin;zfin; WVORN];
save ('f_input.dat','input_mat', '-ascii');
fileID=fopen('f_input.dat','a');
fprintf(fileID,NameOfFile);
fclose(fileID)
fname='f_input.dat';
system(['RevisedVoronoi.exe < ' fname]); %run executable- This is the fortran file that generates the 3D structure based on the given numbers.
% this is to plot the grain map generated by the fortran file:
graineuler=importdata ('grain_euler.dat');
createdmesh=importdata('GRAI001.dat');
%% This is to plot the 3D map of the grains; This section uses lots if

%% Specify Crystal and Specimen Symmetries
% crystal symmetry
CS = symmetry('6/m', [1 1 1.63], 'X||a*', 'Y||b', 'Z||c', 'mineral', 'unkown', 'color', 'light blue');
% specimen symmetry
SS = symmetry('triclinic');

% plotting convention
setMTEXpref('xAxisDirection','north');
setMTEXpref('zAxisDirection','outOfPlane');

%% Specify File Names
% path to files
% which files to be imported
fname = 'GRAI001.dat';

%% Import the Data

% create an EBSD variable containing the data
ebsd = loadEBSD(fname,CS,SS,'interface','generic',...
  'ColumnNames', { 'x' 'y' 'z' 'phi1' 'Phi' 'phi2'}, 'Columns', [2 3 4 5 6 7], 'Bunge');
figure(1)
plot(ebsd)


%% Specify File Names
%% euler 2
fname = ['grain_euler2.dat'];
%% meshed grains
ebsd = loadEBSD(fname,CS,SS,'interface','generic',...
 'ColumnNames', { 'phi1' 'Phi' 'phi2' 'Weight'}, 'Columns', [3 4 5 6], 'Bunge');
figure(2)
odf1 = calcODF(ebsd,'halfwidth',10*degree)
odf2=rotate(odf1, axis2quat(yvector, 90*degree));
plotpdf(odf1,[Miller(1,0,-1,0,CS),Miller(0,0,0,2,CS)],'color','contourf','complete','north')
setcolorrange([0.,4],'all')
annotate([xvector,yvector,zvector],'label',{'RD','TD','ND'});
colorbar
save()